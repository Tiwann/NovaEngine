if(NOT DEFINED ENV{VULKAN_SDK})
    message(FATAL_ERROR "Failed to find vulkan sdk")
endif ()

set(VULKAN_SDK_LOCATION $ENV{VULKAN_SDK})
if(EXISTS ${VULKAN_SDK_LOCATION}/bin)
    set(VULKAN_SDK_BIN_DIR ${VULKAN_SDK_LOCATION}/bin)
elseif (EXISTS ${VULKAN_SDK_LOCATION}/Bin)
    set(VULKAN_SDK_BIN_DIR ${VULKAN_SDK_LOCATION}/Bin)
else()
    message(FATAL_ERROR "Couldn't find Vulkan binaries directory")
endif ()

if(EXISTS ${VULKAN_SDK_LOCATION}/bin)
    set(VULKAN_SDK_LIB_DIR ${VULKAN_SDK_LOCATION}/lib)
elseif (EXISTS ${VULKAN_SDK_LOCATION}/Bin)
    set(VULKAN_SDK_LIB_DIR ${VULKAN_SDK_LOCATION}/Lib)
else()
    message(FATAL_ERROR "Couldn't find Vulkan libraries directory")
endif ()

if(EXISTS ${VULKAN_SDK_LOCATION}/bin)
    set(VULKAN_SDK_INC_DIR ${VULKAN_SDK_LOCATION}/include)
elseif (EXISTS ${VULKAN_SDK_LOCATION}/Bin)
    set(VULKAN_SDK_INC_DIR ${VULKAN_SDK_LOCATION}/Include)
else()
    message(FATAL_ERROR "Couldn't find Vulkan include directory")
endif ()

add_library(vulkan STATIC IMPORTED)
add_library(Vulkan::Vulkan ALIAS vulkan)
target_include_directories(vulkan INTERFACE ${VULKAN_SDK_INC_DIR})
if(WIN32)
    set_target_properties(vulkan PROPERTIES IMPORTED_LOCATION ${VULKAN_SDK_LIB_DIR}/vulkan-1.lib)
elseif(LINUX)
    set_target_properties(vulkan PROPERTIES IMPORTED_LOCATION ${VULKAN_SDK_LIB_DIR}/libvulkan-1.a)
endif ()

add_library(slang STATIC IMPORTED)
add_library(Vulkan::slang ALIAS slang)
target_include_directories(slang INTERFACE ${VULKAN_SDK_INC_DIR})
if(WIN32)
    if(CMAKE_BUILD_TYPE MATCHES "Debug")
        set_target_properties(slang PROPERTIES IMPORTED_LOCATION ${VULKAN_SDK_LIB_DIR}/slangd.lib)
    else()
        set_target_properties(slang PROPERTIES IMPORTED_LOCATION ${VULKAN_SDK_LIB_DIR}/slang.lib)
    endif ()
elseif(LINUX)
    if(CMAKE_BUILD_TYPE MATCHES "Debug")
        set_target_properties(slang PROPERTIES IMPORTED_LOCATION ${VULKAN_SDK_LIB_DIR}/libslangd.a)
    else()
        set_target_properties(slang PROPERTIES IMPORTED_LOCATION ${VULKAN_SDK_LIB_DIR}/libslang.a)
    endif ()
endif ()